import java.util.*;  

class Stock {  
    private String symbol;  
    private String name;  
    private double price;  

    public Stock(String symbol, String name, double price) {  
        this.symbol = symbol;  
        this.name = name;  
        this.price = price;  
    }  

    public String getSymbol() {  
        return symbol;  
    }  

    public String getName() {  
        return name;  
    }  

    public double getPrice() {  
        return price;  
    }  

    public void setPrice(double price) {  
        this.price = price;  
    }  

    @Override  
    public String toString() {  
        return String.format("%s (%s) - $%.2f", name, symbol, price);  
    }  
}  

class Portfolio {  
    private Map<String, Integer> stocks;  

    public Portfolio() {  
        stocks = new HashMap<>();  
    }  

    public void buyStock(String stockSymbol, int quantity) {  
        stocks.put(stockSymbol, stocks.getOrDefault(stockSymbol, 0) + quantity);  
    }  

    public void sellStock(String stockSymbol, int quantity) {  
        if (stocks.containsKey(stockSymbol) && stocks.get(stockSymbol) >= quantity) {  
            stocks.put(stockSymbol, stocks.get(stockSymbol) - quantity);  
            if (stocks.get(stockSymbol) == 0) {  
                stocks.remove(stockSymbol);  
            }  
        } else {  
            System.out.println("Not enough stocks to sell.");  
        }  
    }  

    public void printPortfolio() {  
        if (stocks.isEmpty()) {  
            System.out.println("Your portfolio is empty.");  
        } else {  
            System.out.println("Your Portfolio:");  
            for (Map.Entry<String, Integer> entry : stocks.entrySet()) {  
                System.out.println("Stock: " + entry.getKey() + ", Quantity: " + entry.getValue());  
            }  
        }  
    }  
}  

class Market {  
    private List<Stock> stocks;  

    public Market() {  
        stocks = new ArrayList<>();  
    }  

    public void addStock(Stock stock) {  
        stocks.add(stock);  
    }  

    public Stock getStock(String symbol) {  
        for (Stock stock : stocks) {  
            if (stock.getSymbol().equalsIgnoreCase(symbol)) {  
                return stock;  
            }  
        }  
        return null;  
    }  

    public void displayStocks() {  
        System.out.println("Available Stocks:");  
        for (Stock stock : stocks) {  
            System.out.println(stock);  
        }  
    }  
}  

public class StockTradingPlatform {  
    public static void main(String[] args) {  
        Market market = new Market();  
        Portfolio portfolio = new Portfolio();  
        
        // Add sample stocks to the market  
        market.addStock(new Stock("AAPL", "Apple Inc.", 150.00));  
        market.addStock(new Stock("GOOGL", "Alphabet Inc.", 2800.00));  
        market.addStock(new Stock("AMZN", "Amazon.com Inc.", 3400.00));  
        
        Scanner scanner = new Scanner(System.in);  
        String command;  
        
        while (true) {  
            System.out.println("\nWelcome to the Stock Trading Platform!");  
            System.out.println("1. Display Stocks");  
            System.out.println("2. Buy Stocks");  
            System.out.println("3. Sell Stocks");  
            System.out.println("4. View Portfolio");  
            System.out.println("5. Exit");  
            System.out.print("Enter your choice: ");  
            command = scanner.nextLine();  

            switch (command) {  
                case "1":  
                    market.displayStocks();  
                    break;  
                case "2":  
                    System.out.print("Enter stock symbol to buy: ");  
                    String buySymbol = scanner.nextLine();  
                    System.out.print("Enter quantity: ");  
                    int buyQuantity = scanner.nextInt();  
                    scanner.nextLine(); 
                    Stock buyStock = market.getStock(buySymbol);  
                    if (buyStock != null) {  
                        portfolio.buyStock(buySymbol, buyQuantity);  
                        System.out.println("Bought " + buyQuantity + " of " + buyStock);  
                    } else {  
                        System.out.println("Stock not found.");  
                    }  
                    break;  
                case "3":  
                    System.out.print("Enter stock symbol to sell: ");  
                    String sellSymbol = scanner.nextLine();  
                    System.out.print("Enter quantity: ");  
                    int sellQuantity = scanner.nextInt();  
                    scanner.nextLine(); 
                    portfolio.sellStock(sellSymbol, sellQuantity);  
                    break;  
                case "4":  
                    portfolio.printPortfolio();  
                    break;  
                case "5":  
                    System.out.println("Exiting the platform.");  
                    scanner.close();  
                    return;  
                default:  
                    System.out.println("Invalid choice. Please try again.");  
            }  
        }  
    }  
}